/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Administrator' at '16-2-20 上午8:55' with Gradle 2.11
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.11/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin:'war'

apply from: 'gretty.plugin'
//webAppDirName='webapp'
/*
war{
	dependsOn jarWithoutResources
	from("$projectDir/src") {  
		include "*.xml"
		into("WEB-INF/classes")  
	}
}
*/
// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
	compile 'org.apache.struts:struts2-core:2.3.24.1'
	
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.14'
	compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.16.1'
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
    runtime 'javax.servlet:jstl:1.1.2','org.apache.struts:struts2-core:2.3.24.1'
    providedCompile 'javax.servlet:servlet-api:2.5'
}
gretty {  
    port = 8080  
    contextPath ="/${project.name}"  
    servletContainer = 'tomcat8'
    debugPort = 5005      // default
  	debugSuspend = true   // default
}
task wrapper(type:Wrapper){
	gradleVersion='2.11'
}
